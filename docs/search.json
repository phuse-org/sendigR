[{"path":"https://phuse-org.github.io/sendigR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 BioCelerate Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to sendigR","text":"ready use functions package, must ensure minimum prerequisites fulfilled.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"package-dependencies","dir":"Articles","previous_headings":"Getting started","what":"Package dependencies","title":"Introduction to sendigR","text":"Beside required packages listed Imports section DESCRIPTION, one additional package(s) must installed: ROracle SASxport sjlabelled","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"database","dir":"Articles","previous_headings":"Getting started","what":"Database","title":"Introduction to sendigR","text":"existing SEND database accessed, must contain set tables columns representing domains variables described SEND IG version 3.0 3.1 - union two versions. required names basic data types (.e. numerical character) described SEND IG.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"study-data-to-import","dir":"Articles","previous_headings":"Getting started","what":"Study data to import","title":"Introduction to sendigR","text":"study data imported SQLite database, data study must located separate folder SAS transport files - also konw XPT files. Multiple studies may located together folder hierarchy described .","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"send-controlled-terminology","dir":"Articles","previous_headings":"Getting started","what":"SEND controlled terminology","title":"Introduction to sendigR","text":"Several function packages uses CDISC SEND terminology code list verify validity SEND data. package includes values relevant code lists extracted newest CT version build time. relevant use another version - newer older - version must downloaded Excel format NCI CDISC library archives saved folder accessible R script(s) using package.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"function-overview-","dir":"Articles","previous_headings":"","what":"Function overview.","title":"Introduction to sendigR","text":"package contains 5 sets functions covering different areas - described , including detailed examples.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"initiation-and-closure-of-send-environment","dir":"Articles","previous_headings":"Function overview.","what":"Initiation and closure of SEND environment","title":"Introduction to sendigR","text":"use package’s function, database must opened database must closed final action. call initEnvironment returns handle reference open database pointers low level functions accessing specific type database. handle must given first input parameter execution function package. possible open access multiple databases - also different types - R session. Just execute initEnvironment relevant database save returned db handles distinct variable. Examples following sections demonstrates use functions complete work flow.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"build-a-sqlite-send-database","dir":"Articles","previous_headings":"Function overview.","what":"Build a SQLite SEND database","title":"Introduction to sendigR","text":"possible build SQLite database SEND data imported set studies. possible import data existing SQLite SEND database using dbImportOneStudy dbImportStudies, even though tables created dbCreateSchema. possible delete studies SQLite SEND database dbDeleteStudies - whether tables created dbCreateSchema. make possible import data set studies dbImportStudies, input data saved folder structure like : recommended download DB Browser SQLite look data imported database.","code":"/path/to/SEND/datasets   +-- study01      |   +-- ts.xpt      |   +-- dm.xpt      |   +-- ex.xpt      |   +-- etc.   +-- study02       |   +-- ts.xpt      |   +-- dm.xpt      |   +-- ex.xpt      |   +-- etc.   +-- proj1234     +-- study11         |   +-- ts.xpt           |   +-- dm.xpt           |   +-- ex.xpt           |   +-- etc.     +-- study12         |   +-- ts.xpt           |   +-- dm.xpt           |   +-- ex.xpt           |   +-- etc. +-- etc."},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"examples","dir":"Articles","previous_headings":"Function overview. > Build a SQLite SEND database","what":"Examples","title":"Introduction to sendigR","text":"Create new database, create SEND domain tables import data set studies XPT files saved folder hierarchy - create set indexes optimize data extraction performance sendigR functions: Open existing database import data single study, allow replace potential existing data study database. Delete another study database:","code":"# The database is created by the call of  initEnvironment with the parameter dbCreate = TRUE: dbToken <- initEnvironment(dbType='sqlite',                             dbPath='/path/to/db/send.db',                             dbCreate=TRUE)  # The tables must be created before any study can be imported dbCreateSchema(dbToken)                               status <- dbImportStudies(dbToken, '/path/to/SEND/datasets',                            # Print contiously the status for import each study:                           verbose = TRUE,                           # sand save the status in a log file:                           logFilePath = '/path/to/log file')  # Create a set of indexes to increase query performance for the data extraction functions # - they may be created before of after import of data dbCreateteIndexes(dbToken)  disconnectDB(dbToken) dbToken <- initEnvironment(dbType='sqlite', dbPath='/path/to/db/send.db')  dbImportOneStudy(dbToken, '/path/to/SEND/datasets/proj1234/study11', overWrite=TRUE)  dbDeleteStudies(dbToken, 'study99')  disconnectDB(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"extract-and-filter-send-data","dir":"Articles","previous_headings":"Function overview.","what":"Extract and filter SEND data","title":"Introduction to sendigR","text":"functions divided different groups: Fetch rows data single function genericQuery gives possibility execute SQL query database, .e.executes user defined select statement returns selected rows. used internally functions described , can also used directly fetcg rows ar e possible specific extraction functions described . Extract sets studies functions extracts, filter return studies different kinds conditions. can called without set studies given input. former case, extraction/filtering based TS subset input studies. latter case, extraction/filtering based full TS table. naming convention function getStudiesTSPARMCD, TSPARMCD specific TSPARMCD value handled function - e.g. STSTDTC. Extract full set control animals One function, getControlSubj, extracts return set control animals given input set study id values. ‘negative’ control animals included set control animals - .e. animals treated compound vehicle. Extract subsets animals functions take set animals input, extracts return subset fulfilling given condition - e.g. species route administration. possible execute functions conditions filtering - just return set input rows additional variables actual kind attributes, e.g. sex species/strain. naming convention function getSubjattributes attributes specific attribute handled function - e.g. Sex. Extract subject level data One function, getSubjData, extracts return rows given input set animals specified subject level table - can SEND table including USUBJID column. Extract subsets findings functions take set finding rows input, extracts return subset fulfilling given condition - e.g. specific study phase. possible execute functions conditions filtering - just return set input rows additional variables actual kind attributes, e.g. study phase. naming convention function getFindingsattributes attributes specific attribute handled function - e.g. Phase. functions rely data.table package - input/output sets data data tables. complete list functions: functions input parameter called inclUncertain, default value FALSE. function kind filtering executed : inclUncertain = FALSE rows filtering condition can confidently matched included output data set. E.g. getSubjSpeciesStrain decide species animal value match value CDISC SEND CT code list ‘value SPECIES, animal excluded even though simple misspelling like ’RAAT’ instead ‘RAT’ inclUncertain = TRUE rows filtering condition can confidently matched rows ’s possible decide match filter condition, value decided certainty, included. species example , animal species ‘RAAT’ included. variable named UNCERTAIN_MSG included output data set - contains explanation uncertainty uncertain rows. format message : function id:explanation, function id indicates function message originates , e.g. SpeciesStrain function getSubjSpeciesStrain. Multiple messages function separated &. input data set contains UNCERTAIN_MSG variable, uncertain messages added variable. Messages multiple functions concatenated separated |. mentioned , functions may executed filter conditions just add relevant attributes set data, e.g. SEX variable added output data set execution getSubjSex. cases, additional variable populated found value rows, also value confidently identified - e.g. DM.SEX value like ‘Male’ match value CDISC SEND CT code list value SEX. functions input parameter called noFilterReportUncertain, equivalent inclUncertain parameter described . one functions executed filter condition noFilterReportUncertain = FALSE (default), explanation whether identified values confident included. function executed filter condition noFilterReportUncertain = TRUE, NOT_VALID_MSG variable included output data set explanation reason confident values may found. format variable equivalent UNCERTAIN_MSG variable described . intention functions build work flow pipeline extract set(s) animals, findings kinds subject level data used analysis similar - see example .","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"example","dir":"Articles","previous_headings":"Function overview. > Extract and filter SEND data","what":"Example","title":"Introduction to sendigR","text":"Extract data make analysis: common microscopic findings control Sprague-Dawley male rats 10 14 weeks old finding time dosed oral oral gavage. Include parallel studies 2016 findings treatment phase. Include uncertain records. resulting data.table dataMI contains extracted findings fulfilling wanted conditions can used analysis. includes findings animals may identified uncertain one study subject level functions - level uncertainties described animal.UNCERTAIN_MSG column findings may identified uncertain findings level functions- level uncertainties described dataMI.UNCERTAIN_MSG column.","code":"db <- initEnvironment(dbType='sqlite',                       dbPath='/path/to/db/send.db')  # Extract the relevant set of studies into data.table 'studies' studies <-   getStudiesSDESIGN(db,                     studyDesignFilter = 'PARALLEL',                     inclUncertain = TRUE) %>%   getStudiesSTSTDTC(db, .,                      fromDTC = '2016',                     inclUncertain = TRUE)  # Extract the complete set of control animals for the set of extracted studies  # into data.table 'controlAnimals': controlAnimals <-   getControlSubj(db, studies,                  inclUncertain = TRUE)  # Extract all  #  1: the males #  2: Sprague-Dawley rats #  3: animals dosed by oral or oral gavage # from the set of control animals into data.table 'animals': animals <-    getSubjSex(db, controlAnimals,                sexFilter = 'M',               inclUncertain = TRUE) %>%   getSubjSpeciesStrain(db, .,                        speciesFilter = 'RAT',                        strainFilter = 'Sprague-Dawley',                        inclUncertain = TRUE) %>%   getSubjRoute(db, .,                routeFilter = c('ORAL', 'ORAL GAVAGE'),                inclUncertain = TRUE)  # Extract microscopic findings #  1: all MI rows for the extrated set of animals #  2: keep the MI rows from the treatment phase #  3: keep the MI rows where the animals are between 10 and 14 weeks at the time  #     of finding # into data.table 'dataMI': dataMI <-    getSubjData(db, animals, 'MI') %>%   getFindingsPhase(db, .,                    phaseFilter = \"treatment\",                    inclUncertain = TRUE) %>%   getFindingsSubjAge(db, .,                      fromAge = '10w',                      toAge = '14w',                      inclUncertain = TRUE)                       disconnectDB(db)"},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"execute-senddashboard-app","dir":"Articles","previous_headings":"Function overview.","what":"Execute sendDashboard app","title":"Introduction to sendigR","text":"sendigR package contains encapsulated Shiny app - SendDashboard. app enables user search extract historical control data SEND database. SendDashboard","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Introduction.html","id":"example-1","dir":"Articles","previous_headings":"Function overview. > Execute sendDashboard app","what":"Example","title":"Introduction to sendigR","text":"Connect database, start app. Remember disconnect database leaving app.","code":"library(sendigR) dbToken <- initEnvironment(dbType='sqlite', dbPath='/path/to/db/send.db')  execSendDashboard(dbToken)  disconnectDB(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"execute-senddashboard-app","dir":"Articles","previous_headings":"","what":"Execute sendDashboard app","title":"SendDashboard","text":"sendigR package contains encapsulated Shiny app - SendDashboard. app enables user search extract historical control data SEND database.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"example","dir":"Articles","previous_headings":"Execute sendDashboard app","what":"Example","title":"SendDashboard","text":"Connect database start app. Remember disconnect database leaving app. test database can found - - Database Download database local directory update dbPath.","code":"library(sendigR) dbToken <- initEnvironment(dbType='sqlite', dbPath='/path/to/db/send.db') execSendDashboard(dbToken) disconnectDB(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"demo","dir":"Articles","previous_headings":"","what":"Demo","title":"SendDashboard","text":"Demo app can found - - Shiny App Demo","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"sidebar-menu","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"Sidebar Menu","title":"SendDashboard","text":"side_bar Select Study Start Date Range: User can select date range calendar input.Select Study Design: User can select study design type drop menu.Select Route Administration: User can select one multiple route administration list extracted database.Select Species: User can select one multiple species suggested list. list extracted current database.Select Strain: suggested list strain depends species selected . User can select one multiple strain.Select Sex: User can select sex animals filter drop menu.Include uncertain rows: Whether user want include uncertain control animal. see uncertain meanGenerate/Update Data: Whenever user change input sidebar menu, Generate/Update Data button need click update filter criteria.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"tab-for-animals-mi-lb-bw-download","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"Tab for ANIMALS | MI | LB | BW | Download","title":"SendDashboard","text":"top middle page tab shows different table different domain","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"animals","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"ANIMALS","title":"SendDashboard","text":"user click Generate/Update Data button, app filter extract table containing control animal information specified sidebar input fields.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"common-feature-of-the-table","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"Common feature of the table","title":"SendDashboard","text":"table_feature Show entries: User can choose many entry want show drop menu located upper left side table.Search: global search button located upper right side table. User can search word globally table. Table show entry match search. Column filter: Located column name table. User can filter tablePagination: Page number available bottom right table. User can go specific page using page number. Next previous button can use go next previous page, respectively.Download Button: User can download current table csv rds format clicking appropriate download button located bottom right table. Column name: user hover cursor column name, show full name column. column_hover Display Column: Individual table MI, LB BW domain vertical column left side table. Individual table shows specific column default. column can selected checking box display column. update table show columns selected left display column. vertical left display column can hide checking show table check box located display column","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"filter-animal-age","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"Filter Animal Age","title":"SendDashboard","text":"MI, LB, BW tab filter option animal age. User can select animal age range slider. User also need click update button show tables tab.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"mi-microscopic-findings-tab","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"MI (Microscopic Findings) Tab","title":"SendDashboard","text":"MI Findings User can filter control animals find historical control incidence rate table specific MISPEC Kidney. Individual Records table shows MI domain information filtered control animals. Aggregate Table Aggregate table shows percentage Microscopic Findings. User can filter specific tissue organ MISPEC column table shows count percentage findings. table grouped MISPEC, SPECIES, STRAIN, SEX ROUTE columns.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"lb-laboratory-test-results-tab","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"LB (Laboratory Test Results) Tab","title":"SendDashboard","text":"Individual Records table shows LB domain information filtered control animals. Numeric Aggregate Table Table shows mean standard deviation laboratory test results numeric variable. Table grouped LBSPEC, SPECIES, STRAIN, SEX, ROUTE, LBTESTCD, LBTEST LBSTRESU columns.Categorical Aggregate Table Aggregate table shows percentage laboratory result lab test categorical. LB Observation User can select specific lab test find percentage lab result.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"bw-body-weight-tab","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"BW (Body Weight) Tab","title":"SendDashboard","text":"Individual Records table shows BW domain information filtered control animals. Aggregate Table Table shows mean standard deviation body weight. Table grouped AGEDAYS, SPECIES, STRAIN, ROUTE, SEX, BWORRESU columns. Aggregate Plot Plot show mean body weight age days. User can select two type plot. Default plot show mean mean body weight selected interval age days. Original Data plot show mean body weight animal age days.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/SendDashboard.html","id":"download","dir":"Articles","previous_headings":"sendigR Shiny App Features","what":"Download","title":"SendDashboard","text":"User can download table RDS format one file.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"description-of-vignette","dir":"Articles","previous_headings":"","what":"Description of Vignette","title":"Using xptcleaner","text":"Describes use python package xptcleaner apply JSON ontology terms clean SEND xpt files.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Using xptcleaner","text":"ready use functions package, must ensure minimum prerequisites fulfilled.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"python-and-r-installation","dir":"Articles","previous_headings":"Getting started > xptcleaner python package and sendigR R package installation","what":"Python and R installation","title":"Using xptcleaner","text":"R version 4.1.2 , Python 3.9.6 packages used develop test code. versions can used, issues may arise depending versions.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"using-pip","dir":"Articles","previous_headings":"Getting started > xptcleaner python package and sendigR R package installation > xptcleaner python package installation","what":"Using pip","title":"Using xptcleaner","text":"Probably easiest way: conda, virtualenv just base installation : running machine without admin rights, want install base installation can :","code":"pip install xptcleaner pip install xptcleaner --user"},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"using-source-archive-or-using-wheel-file-","dir":"Articles","previous_headings":"Getting started > xptcleaner python package and sendigR R package installation > xptcleaner python package installation","what":"Using source archive or using wheel file.","title":"Using xptcleaner","text":"addtional install Python Package Index(PyPI), source archive wheel archive can also used installation. source archive wheel xptcleaner can obtained sendigR Github sendigR- xptcleaner Using source archive: Using shell command install xptcleaner package, assume source archive ‘dist’ sub folder. Replace {version} correct version number, e.g. 1.0.0. Using wheel: Using shell command install xptcleaner package, assume wheel file ‘dist’ sub folder. following required python packages installed xptcleaner package installation:","code":"$ py -m pip install ./dist/xptcleaner-{version}.tar.gz $ py -m pip install ./dist/xptcleaner-{version}-py3-none-any.whl * pandas  * pyreadstat"},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"sendigr-r-package-installation","dir":"Articles","previous_headings":"Getting started > xptcleaner python package and sendigR R package installation","what":"sendigR R package installation","title":"Using xptcleaner","text":"Install sendigR packages, refer README details.","code":"# Get CRAN version install.packages(\"sendigR\") # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github('phuse-org/sendigR')"},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"locating-the-scripts","dir":"Articles","previous_headings":"Getting started","what":"Locating the scripts","title":"Using xptcleaner","text":"sendigR located : https://github.com/phuse-org/sendigR/ importStudies.R script located : https://github.com/phuse-org/sendigR/importStudies.R Python code generate JSON file XPT cleanup located : https://github.com/phuse-org/sendigR/tree/main/python/xptcleaner sample CDISC CT file extensible CT file located ‘data-raw’ subfolder sendigR package.","code":""},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"creating-the-json-for-vocabulary-mapping","dir":"Articles","previous_headings":"","what":"Creating the JSON for Vocabulary Mapping","title":"Using xptcleaner","text":"","code":"library(reticulate) library(sendigR) #input CDISC and Extensible CT files. infile1 <- \"{path to CT file}/SEND_Terminology_EXTENSIBLE.txt\" infile2 <- \"{path to CT file}/SEND Terminology_2021_12_17.txt\" #output JSON file jsonfile <- \"{path to CT file to be created}/SENDct.json\" #Call the gen_vocab function with the input and output files sendigR::gen_vocab(list(infile1, infile2),jsonfile )"},{"path":"https://phuse-org.github.io/sendigR/articles/Usingxptcleaner.html","id":"standardize-xpt-files-with-the-json-file-created","dir":"Articles","previous_headings":"","what":"Standardize xpt files with the json file created","title":"Using xptcleaner","text":"","code":"library(reticulate) library(sendigR)  #JSON file used for the xpt cleaning jsonfile <- \"{path to CT file to be created}/SENDct.json\"  #folder containing the source xpt files rawXptFolder <- \"{path to xpt files}/96298/\" #folder containing the cleaned target xpt files cleanXptFolder <- \"{path to cleaned xpt files}/96298/\" #Call the standardize_file function to clean the xpt file sendigR::standardize_file(rawXptFolder, cleanXptFolder, jsonfile )"},{"path":"https://phuse-org.github.io/sendigR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bo Larsen. Author. Yousuf Ali. Author. Kevin Snyder. Author. William Houser. Author. Brianna Paisley. Author. Cmsabbir Ahmed. Author. Susan Butler. Author. Michael Rosentreter. Author. Michael Denieu. Author. Wenxian Wang. Maintainer, author. BioCelerate. Copyright holder.","code":""},{"path":"https://phuse-org.github.io/sendigR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larsen B, Ali Y, Snyder K, Houser W, Paisley B, Ahmed C, Butler S, Rosentreter M, Denieu M, Wang W (2022). sendigR: Extract Control Data CDISC SEND Study Data Repository Cross Studies Analysis. R package version 0.0.1, https://github.com/phuse-org/sendigR.","code":"@Manual{,   title = {sendigR: Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis},   author = {Bo Larsen and Yousuf Ali and Kevin Snyder and William Houser and Brianna Paisley and Cmsabbir Ahmed and Susan Butler and Michael Rosentreter and Michael Denieu and Wenxian Wang},   year = {2022},   note = {R package version 0.0.1},   url = {https://github.com/phuse-org/sendigR}, }"},{"path":"https://phuse-org.github.io/sendigR/index.html","id":"sendigr","dir":"","previous_headings":"","what":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","title":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","text":"purpose sendigR package extract control data set nonclinical studies stored CDISC SEND format database used cross study analysis. sendigR includes: Functions construct relational database collection SEND datasets; functions query control data database; R Shiny application graphical user interface facilitating cross-study analysis. optional Python package (xptclearner) harmonize SEND datasets using SEND controlled terminology extensible terminology; Familiarity CDISC SEND data model least basic knowledge animal studies necessary use package.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/index.html","id":"installation-of-r-and-rstudio","dir":"","previous_headings":"Step by Step Installation","what":"Installation of R and RStudio","title":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","text":"R version 4.1.2 used developing testing sendigR. R RStudio Installation","code":""},{"path":"https://phuse-org.github.io/sendigR/index.html","id":"installation-of-python-and-xptcleaner-optional","dir":"","previous_headings":"Step by Step Installation","what":"Installation of Python and xptcleaner (optional)","title":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","text":"Python version 3.9.6 used developing testing xptcleaner sendigR. optional component, can skip step use xptcleaner clean xpt files. Python installation xptcleaner Python package installation","code":""},{"path":"https://phuse-org.github.io/sendigR/index.html","id":"installation-of-sendigr-package","dir":"","previous_headings":"Step by Step Installation","what":"Installation of sendigR package","title":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","text":"","code":"# Get CRAN version, this will be available soon install.packages(\"sendigR\")  # Or the development version from GitHub: install.packages(\"devtools\") devtools::install_github('phuse-org/sendigR')"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/index.html","id":"sendigr-license","dir":"","previous_headings":"","what":"sendigR License","title":"Extract Control Data from a CDISC SEND Study Data Repository for Cross Studies Analysis","text":"sendigR package including optional Python xptcleaner subject MIT Open Source License: MIT License Copyright (c) 2022 PHUSE BioCelerate Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create indexes in SEND database — dbCreateIndexes","title":"Create indexes in SEND database — dbCreateIndexes","text":"Create set indexes tables SQLite SEND database optimize performance extraction data different functions package.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create indexes in SEND database — dbCreateIndexes","text":"","code":"dbCreateIndexes(dbToken, replaceExisting = FALSE)"},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create indexes in SEND database — dbCreateIndexes","text":"dbToken Mandatory Token open database connection (see initEnvironment). replaceExisting Mandatory, character Whether already existing set indexes database may replaced new set indexes.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateIndexes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create indexes in SEND database — dbCreateIndexes","text":"indexes named <domain name>_sendigr_<nn> - .e.g. TS_sendigr_01. additional indexes manually created database, avoid include 'sendigr' name, existing indexes included name initially deleted execution function replaceExisting = TRUE. recommended wait creation indexes major amount studies loaded database loaded. database must SQLite database - types databases supported function.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateIndexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create indexes in SEND database — dbCreateIndexes","text":"","code":"if (FALSE) { createAllIndexes(myDbToken) }"},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateSchema.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SEND schema in an open and empty database — dbCreateSchema","title":"Create a SEND schema in an open and empty database — dbCreateSchema","text":"Create domains variables described SEND IG versions 3.0 3.1 database - .e. union domains SEND IG versions domain union variables SEND IG versions.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateSchema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SEND schema in an open and empty database — dbCreateSchema","text":"","code":"dbCreateSchema(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateSchema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SEND schema in an open and empty database — dbCreateSchema","text":"dbToken Mandatory Token open database connection (see initEnvironment).","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateSchema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a SEND schema in an open and empty database — dbCreateSchema","text":"database must SQLite database - types databases supported function.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbCreateSchema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SEND schema in an open and empty database — dbCreateSchema","text":"","code":"if (FALSE) { # Create an empty SQLite database and create the SEND schema myDbToken <- initEnvironment(dbType = 'sqlite',                              dbPath ='/mydatapath/db/send.db',                              dbCreate = TRUE) dbCreateSchema(myDbToken) }"},{"path":"https://phuse-org.github.io/sendigR/reference/dbDeleteStudies.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete one or more studies in SEND database — dbDeleteStudies","title":"Delete one or more studies in SEND database — dbDeleteStudies","text":"Deletes data domains one studies SQLite based SEND database","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbDeleteStudies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete one or more studies in SEND database — dbDeleteStudies","text":"","code":"dbDeleteStudies(dbToken, studyIdList)"},{"path":"https://phuse-org.github.io/sendigR/reference/dbDeleteStudies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete one or more studies in SEND database — dbDeleteStudies","text":"dbToken Mandatory Token open database connection (see initEnvironment). studyIdList Mandatory, character list vector study id values","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbDeleteStudies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete one or more studies in SEND database — dbDeleteStudies","text":"database must SQLite database - types databases supported function.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbDeleteStudies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete one or more studies in SEND database — dbDeleteStudies","text":"","code":"if (FALSE) { # delete one study dbDeleteStudies(myDbToken, '122312') # delete multiple studies dbDeleteStudies(myDbToken, list('122312', '552343', '0942347')) }"},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportOneStudy.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","title":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","text":"Check SAS xpt file located specified folder - import content file load corresponding SEND domain table open database.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportOneStudy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","text":"","code":"dbImportOneStudy(dbToken, xptPath, overWrite = FALSE, checkRequiredVars = TRUE)"},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportOneStudy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","text":"dbToken Mandatory Token open database connection (see initEnvironment). xptPath Mandatory, character Location SAS xport files overWrite Mandatory, boolean Whether already existing study database may overwritten newly imported data. checkRequiredVars Mandatory, boolean Whether -required domains checked existence content required variables","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportOneStudy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","text":"requirements content folder must fulfilled: folder must contain SAS xport files named [send domain].xpt - case file names care minimum set required domain files must included: ts.xpt, tx.xpt, dm.xpt. xpt file must contain one data table name file name - .e. send domain name. xpt file must contain non-empty STUDYID value row equal value TS.STUDYID. xpt file must contain set required column(s). general (relevant different kinds domains):STUDYID, DOMAIN, --SEQ, USUBJID, --TESTCD, --TEST,--ORRES, --ORRESU,    --STRESC, --STRESN, --STRESU DOMAIN variable must contain name actual domain rows last two requirements checked required domains cases. domains, two requirements checked parameter checkRequiredVars = TRUE. error detected, import load data canceled, execution aborted (.e. error message written console). error situations checked reported: requirements 1 3 fulfilled following requirements fulfilled one required domains study value STUDYID exists database parameter overWrite = FALSE. one requirements 4 6 fulfilled -required domain, domain excluded import. kinds issues reported one warning message console data loaded. non-critical issues, prohibit data loaded database may detected. reported one warning message console data loaded (together eventual warning messages skipped domains). non-critical issues checked reported: study folder contains one xpt file(s) names(s) matching SEND domain name(s). files ignored import/load process. imported data tables contains one column(s) (es)n't exist(s) corresponding domain. database must SQLite database - types databases supported function.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportOneStudy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import SEND study data in SAS xport format into a SEND database from a single\nstudy folder — dbImportOneStudy","text":"","code":"if (FALSE) { # Do not overwrite if study already exists in the database dbImportOneStudy(myDbToken,'/mydatapath/studies/1213443') # Allow to overwrite data if study already exists in the database dbImportOneStudy(myDbToken,'/mydatapath/studies/786756', overwrite = TRUE) }"},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"non-empty folder specified root folder, actions import set SAS xpt files opened SQLlite database described function dbImportOneStudy.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"","code":"dbImportStudies(   dbToken,   xptPathRoot,   overWrite = FALSE,   checkRequiredVars = TRUE,   verbose = FALSE,   logFilePath = NULL )"},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"dbToken Mandatory Token open database connection (see initEnvironment). xptPathRoot Mandatory, character Root location set sub folders - sub folder SAS xport files per study import. folder tree traversed recursively - .e. multilevel folder hierarchy allowed. overWrite Mandatory, boolean Whether already existing study database may overwritten newly imported data. checkRequiredVars Mandatory, boolean Whether -required domains checked existence content required variables verbose Mandatory, boolean Whether status import shall continuously written console processed sub folder. logFilePath Optional, character path folder contain log file status import processed sub folder. name log file logFilePath/dbImportStudies_<date &   time>.log <date & time> actual date time format YYYYmmdd_HH24MISS - e.g. dbImportStudies_20210323_084150.log function called 23. March 2021 8:41:50","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"list containing named element import status processed sub folders.statuses one three variants: 'OK' - SAS xport files imported database errors warnings 'Warning: [list warnings]' - SAS xport files imported database one warnings 'Cancelled: [error message]' - SAS xport files imported database error detected.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"status processing sub folder catched returned described . parameter verbose = TRUE, status processed sub folder also printed console time sub folder processed - .e. possible followed progress import process. parameter logFilePath specified existing path folder, status processed sub folder also printed log file folder time sub folder processed. database must SQLite database - types databases supported function.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/dbImportStudies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import SEND study data in SAS xport format into a SEND database from a\nhierarchy study folders. — dbImportStudies","text":"","code":"if (FALSE) { # Import studies from a set of folders - do not allow to overwrite # existing study data in the database, follow the progress dbImportStudies(myDbToken,'/mydatapath/studies', verbose = TRUE) # Import studies from another set of folders - allow to overwrite existing # study data in the database dbImportStudies(myDbToken,'/mydatapath/project123/studies', overwrite = TRUE) # Import studies from a set of folders , save the status of each study load # in a log file dbImportStudies(myDbToken,'/mydatapath/studies',                 logFilePath = '/my/log file/path') }"},{"path":"https://phuse-org.github.io/sendigR/reference/disconnectDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from the open database. — disconnectDB","title":"Disconnect from the open database. — disconnectDB","text":"Close database session disconnect open database.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/disconnectDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from the open database. — disconnectDB","text":"","code":"disconnectDB(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/reference/disconnectDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect from the open database. — disconnectDB","text":"dbToken Mandatory Token open database connection (see initEnvironment).","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/disconnectDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from the open database. — disconnectDB","text":"","code":"if (FALSE) { disconnectDB() }"},{"path":"https://phuse-org.github.io/sendigR/reference/execSendDashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute sendDashboard app — execSendDashboard","title":"Execute sendDashboard app — execSendDashboard","text":"Executes encapsulated Shiny query, visualize extract historical control data SEND database.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/execSendDashboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute sendDashboard app — execSendDashboard","text":"","code":"execSendDashboard(dbToken)"},{"path":"https://phuse-org.github.io/sendigR/reference/execSendDashboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute sendDashboard app — execSendDashboard","text":"dbToken Mandatory - token open database connection","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/execSendDashboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute sendDashboard app — execSendDashboard","text":"function dores return anything, possible extract data app different formats use processing","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/execSendDashboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute sendDashboard app — execSendDashboard","text":"","code":"if (FALSE) { dbToken <- initEnvironment(dbType='sqlite', dbPath='/path/to/database/send.db') execSendDashboard(dbToken) disconnectDB(dbToken) }"},{"path":"https://phuse-org.github.io/sendigR/reference/gen_vocab.html","id":null,"dir":"Reference","previous_headings":"","what":"Create json file for vocabulary mappings.\nKeys are synonyms and values are the CDISC Controlled Terminology Submission values.\nVocabularies are defined by column values from the tab-delimited files. — gen_vocab","title":"Create json file for vocabulary mappings.\nKeys are synonyms and values are the CDISC Controlled Terminology Submission values.\nVocabularies are defined by column values from the tab-delimited files. — gen_vocab","text":"Create json file vocabulary mappings. Keys synonyms values CDISC Controlled Terminology Submission values. Vocabularies defined column values tab-delimited files.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/gen_vocab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create json file for vocabulary mappings.\nKeys are synonyms and values are the CDISC Controlled Terminology Submission values.\nVocabularies are defined by column values from the tab-delimited files. — gen_vocab","text":"","code":"gen_vocab(in_file, out_path)"},{"path":"https://phuse-org.github.io/sendigR/reference/gen_vocab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create json file for vocabulary mappings.\nKeys are synonyms and values are the CDISC Controlled Terminology Submission values.\nVocabularies are defined by column values from the tab-delimited files. — gen_vocab","text":"in_file Mandatory. List tab-delimited files synonyms preferred terms. out_path Mandatory. output json filename.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/gen_vocab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create json file for vocabulary mappings.\nKeys are synonyms and values are the CDISC Controlled Terminology Submission values.\nVocabularies are defined by column values from the tab-delimited files. — gen_vocab","text":"","code":"if (FALSE) { gen_vocab(list(infile1, infile2),jsonfile) }"},{"path":"https://phuse-org.github.io/sendigR/reference/genericQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute database query and returns fetched rows. — genericQuery","title":"Execute database query and returns fetched rows. — genericQuery","text":"function executes SQL select statements database returns fetched set rows data.table.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/genericQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute database query and returns fetched rows. — genericQuery","text":"","code":"genericQuery(dbToken, queryString, queryParams = NULL)"},{"path":"https://phuse-org.github.io/sendigR/reference/genericQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute database query and returns fetched rows. — genericQuery","text":"dbToken Mandatory Token open database connection (see initEnvironment). queryString Mandatory, character. select statement execute queryParams Optional, character. variable values bind variable referenced clause select statement","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/genericQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute database query and returns fetched rows. — genericQuery","text":"Data.table set fetched rows","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a list of control animals for a list of studies — getControlSubj","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"Returns data table list animals belonging groups negative control given list studies.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"","code":"getControlSubj(dbToken, studyList, inclUncertain = FALSE)"},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"dbToken Mandatory. Token open database connection (see initEnvironment). studyList Mandatory, data.table. table list studies limit output within set studies. table must include column named 'STUDYID'. inclUncertain Mandatory, boolean. Indicates whether animals, identified neither negative positive control (.e. uncertain animals), shall included output data table.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"function return data.table columns: STUDYID       (character) Additional columns contained studyList table TCNTRL        (character) value TX parameter TCNTRL used identification whether negative control group USUBJID       (character) RFSTDTC       (character) DM_AGEDAYS    (integer) calculated age days animal reference start day - .e. age registered DM. DSDECOD    (character) standardized disposition term animal DS_AGEDAYS    (integer) calculated age days animal disposition NO_AGE_MSG    (character) Empty contains reason DM_AGEDAYS calculated UNCERTAIN_MSG (character) Included parameter inclUncertain=TRUE. Contains reason uncertain animal NA rows confident identified negative control animals. NOT_VALID_MSG (character) Included column included data table specified studyList,","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"set animals contains animals DM SETCD associated TX parameter 'TCNTRL'. Negative control animals defined either containing word set words, automatically distinguish negative control: ['placebo', 'untreated', 'sham'] containing combination word  two lists: ['negative', 'saline', 'peg', 'vehicle', 'citrate', 'dextrose', 'water', 'air'] ['item', 'control', 'article'] Animals cases excluded (.e. whether inclUncertain=TRUE inclUncertain=FALSE) output set, identified positive control animals - .e associated TX parameter 'TCNTRL' containing word set words: ['positive','reference'] age days reference start date calculated animal based age related variables DM: BRTHDTC populated compute DM.RFSTDTC – DM.BRTHDTC + 1 Else AGE populated convert units specified AGEU days. Else AGETXT populated convert mid-point range units specified AGEU days. AGEU units handled described conversion value number days: DAYS WEEKS   : value * 7 MONTHS  : value * 365/12 YEARS   : value * 365 input parameter inclUncertain=TRUE, uncertain animals included output set. uncertain situations identified reported (column UNCERTAIN_MSG): TX parameter 'TCNTRL' missing TXVAL TX parameter 'TCNTRL' identified Negative Positive control according algorithm described ","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getControlSubj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a list of control animals for a list of studies — getControlSubj","text":"","code":"if (FALSE) { controlAnimals <- getControlSubj(myDbToken, allSTudies) }"},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsPhase.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","title":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","text":"Returns data table set findings rows included findings phase(s) specified phaseFilter. phaseFilter empty (null, na empty string), rows findings returned additional PHASE column.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsPhase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","text":"","code":"getFindingsPhase(   dbToken,   findings,   phaseFilter = NULL,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsPhase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","text":"dbToken Mandatory Token open database connection (see initEnvironment). findings Mandatory, data.table. data.table set finding rows process. table must include least columns named STUDYID USUBJID DOMAIN domainSEQ domainDTC domain name actual findings domain - e.g. LBSEQ LBDTC phaseFilter Optional, character. phase value criterion used filtering list animals. can single string, vector list multiple strings. inclUncertain Mandatory, boolean. relevant phaseFilter empty. Indicates whether finding rows phase confidently identified shall included output data table. noFilterReportUncertain Mandatory, boolean. relevant phaseFilter empty. Indicates reason included phase confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsPhase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","text":"function returns data.table columns order: columns contained findings input table (original order except optional UNCERTAIN_MSG NOT_VALID_MSG) PHASE          (character) UNCERTAIN_MSG  (character) Included parameter inclUncertain=TRUE. case phase confidently matched filtering data, column contains indication reason. uncertainties identified individual subjects included pools pooled finding rows, messages subjects per pool/findings merged together reported one message per pool/finding. NA rows phase can confidently matched. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist input set findings specified findings - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case phase confidently decided, column contains indication reason. NA rows phase can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set findings findings - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsPhase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a set of findings for a specified study phase - or just add phase\nfor each animal. — getFindingsPhase","text":"logic extraction based subject elements trial design domains - finding row: related subject element found SE row value domainDTC within interval SESTDTC SEENDTC actual EPOCH found TA row matching found element (via ETCD value) actual study phase derived EPOCH value matching set text patterns pooled findings rows - .e. POOLID populated instead USUBJID - phase identified per animal included pool finding, identified phases equal per pool finding, identified phase returned per pool finding. populated value phase one : 'Screening' TA.EPOCH fulfills one: contains 'pre' followed one ['treat','trt','dos',test','study','exposure'] contains one ['acclimat','screen','baseline','allocat','random'] 'Recovery' TA.EPOCH fulfill pattern 'Screening' fulfills one : contains 'recovery' contains 'post' followed one ['treat','trt','dos','test','study','exposure'] 'Treatment' TA.EPOCH fulfill patterns 'Screening' 'Recovery' fulfills : contains one ['treat','trt','dos','test','exposure'] contain ['','non'|','free'|','holiday'] 'Uncertain' TA.EPOCH empty fulfills requirements described three phases . input parameter inclUncertain=TRUE, findings rows phase confidently identified included output set. uncertain situations identified reported (column UNCERTAIN_MSG): One date/time values SESTDTC, SEENDTC domainDTC empty contains invalid ISO 8601 value value domainDTC included one SESTDTC/SEENDTC interval EPOCH value match patterns identifying set possible study phases. Different phases identified individual subjects pool given finding checks performed reported column NOT_VALID_MSG phaseFilter empty noFilterReportUncertain=TRUE.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsSubjAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","title":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","text":"Returns data table set findings rows included findings age subjects finding time within interval specified fromAge fromAge. fromAge fromAge empty (null, na empty string), rows findings returned.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsSubjAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","text":"","code":"getFindingsSubjAge(   dbToken,   findings,   animalList,   fromAge = NULL,   toAge = NULL,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsSubjAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","text":"dbToken Mandatory Token open database connection (see initEnvironment). findings Mandatory, data.table. table set input finding rows process. table must include least columns named STUDYID USUBJID DOMAIN [domain]SEQ [domain]DY [domain]DTC [domain] name actual findings domain - e.g. LBSEQ, LBDY LBDTC animalList Mandatory, data.table. data set animals included findings table (may contain animals included findings). data set must contain least columns returned function getControlSubj STUDYID USUBJID RFSTDTC DM_AGEDAYS NO_AGE_MSG fromAge Optional, character  start age interval extract. Must string format:[value][age unit] [age unit] one d, day, days w, week, weeks m, month, months y, year, years unit case-insensitive, space(s) age value unit allowed. toAge Optional. character  start age interval extract. Must string format described fromAge. inclUncertain Mandatory, boolean. relevant fromAge /toAge /empty. Indicates whether finding rows age finding time confidently identified, shall included output data table. noFilterReportUncertain Optional, boolean. relevant fromAge toAge empty. Indicates reason included age finding time confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsSubjAge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","text":"function returns data.table columns order: columns contained findings input table (original order except optional UNCERTAIN_MSG NOT_VALID_MSG) AGEDAYS        (character) subject age finding time calculated days. NA thge age confidently calculated. UNCERTAIN_MSG  (character) Included parameter inclUncertain=TRUE. case age finding time confidently matched filtering data, column contains indication reason. uncertainties identified individual subjects included pools pooled finding rows, one  message reported per pool/finding. NA rows age finding time can confidently matched. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist input set findings specified findings - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case age finding time confidently calculated, column contains indication reason. NA rows age finding time can confidently calculated. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set findings findings - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getFindingsSubjAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add the subject age at finding time - and optionally extract the set of\nfindings within a specified range of age. — getFindingsSubjAge","text":"situation, subject age finding time calculated additional column AGEDAYS row findings combined additional input data.table animalList using algorithm: Determine number study days study start findings findings.[domain]DY populated findings.[domain]DY > 0 use findings.[domain]DY - 1 Else use findings.[domain]DY Else findings.[domain]DTC populated compute animalList.RFSTDTC – findings.[domain]DTC days animalList.RFSTDTC subject's reference start date (DM.RFSTDTC) Animal age time finding calculated animalList.AGEDAYS + [study days study start         findings] animalList.AGEDAYS  subject age reference start date(calculated extraction control subjects getControlSubj. pooled findings rows - .e. POOLID populated instead USUBJID - animal age time finding calculated per animal included pool finding. calculated ages equal within pool finding, calculated age populated pool/finding. calculated ages within time internal (2 days) within pool finding, minimum calculated age plus 1 day populated pool/finding. fromAge toAge values specified - rows input table findings value calculated AGEDYAS within interval specified start/end age interval returned - including values equal start/end age values. fromAge value specified - rows input table findings value AGEDYAS equal greater input age returned. toAge value specified - rows input table findings value AGEDAYS equal less input age extracted returned. input age value(s) /converted days extraction rows input data tables using input value(s) filter - using conversion: DAYS WEEKS   : value * 7 MONTHS  : value * 365/12 YEARS   : value * 365 input parameter inclUncertain=TRUE, findings rows age finding time confidently identified included output set. uncertain situations identified reported (column UNCERTAIN_MSG): age reference time  calculated subject (animalList.AGEDAYS) Reference start time  missing contains invalid ISO8601 date value subject (animalList.RFSTDTC). Missing [domain]DY value missing invalid ISO8601 date [domain]DTC value finding pooled findings: two days minimum maximum animalList.AGEDAYS set animals pool. Different values animalList.RFSTDTC set animals pool. checks performed reported column NOT_VALID_MSG fromAge fromAge empty noFilterReportUncertain = TRUE.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"Returns data table list study ids TS value TSVAL TSPARMCD 'SDESIGN' equal given study design. studyDesignFilter empty (null, na empty string) - rows TSPARMCD 'SDESIGN' returned.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"","code":"getStudiesSDESIGN(   dbToken,   studyList = NULL,   studyDesignFilter = NULL,   exclusively = TRUE,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"dbToken Mandatory. Token open database connection (see initEnvironment). studyList Optional, data.table. table list studies process. empty, studies data base processed table must include least column named 'STUDYID' studyDesignFilter Mandatory, character. study design use criterion filtering study id values. can single string, vector list multiple strings. exclusively Mandatory, boolean. TRUE: Include studies studies study design(s) included studyDesignFilter. FALSE: Include studies study design matching studyDesignFilter. inclUncertain Mandatory, boolean. Indicates whether study ids SDESIGN value missing wrong shall included output data table. noFilterReportUncertain Mandatory, boolean relevant studyDesignFilter empty. Indicates reason included SDESIGN confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"function returns data.table columns: STUDYID       (character) Additional columns contained studyList table (input table given) SDESIGN       (character) multiple TSPARMCD 'SDESIGN' values extratced studies, values merged comma separated string. UNCERTAIN_MSG (character) Included parameter inclUncertain=TRUE. Contains indication whether STSTDTC missing wrong format. NA rows SDESIGN valid. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist optional input set studies specified studyList - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case SDESIGN confidently decided, column contains indication reason. NA rows SDESIGN can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set studies specified studyList - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"Extracts set studies TS value TSVAL TSPARMCD 'SDESIGN' equal given study design. comparison study design values done case insensitive. data table list studies specified studyList, subset studies included set processed. input parameter inclUncertain=TRUE, uncertain animals included output set. uncertain situations identified reported (column UNCERTAIN_MSG): without row TSPARMCD='SDESIGN' TSVAL contain value included  CDISC CT list 'DESIGN' TSPARMCD='SDESIGN' (case insensitive comparison) checks performed reported column NOT_VALID_MSG studyDesignFilter empty noFilterReportUncertain=TRUE.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSDESIGN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a list of SEND studies with a specified study design - or just add\nactual study design for each study. — getStudiesSDESIGN","text":"","code":"if (FALSE) { GetStudyListSDESIGN(myDbToken, 'PARALLEL') }"},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"Returns data table list study ids TS value TSVAL TSPARMCD 'STSTDTC' within given date interval. fromDTC andtoDTC empty (null, na empty string) rows TSPARMCD 'STSTDTC' returned.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"","code":"getStudiesSTSTDTC(   dbToken,   studyList = NULL,   fromDTC = NULL,   toDTC = NULL,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"dbToken Mandatory. Token open database connection (see initEnvironment). studyList Optional. data.table list studies process. empty, studies data base processed  table must include least column named 'STUDYID'. fromDTC Optional (either fromDTC toDTC must filled). start date interval extract - must ISO8601 date format. toDTC Optional (either fromDTC toDTC must filled). end date interval extract - must ISO8601 date format. inclUncertain Mandatory, boolean. Indicates whether study ids STSTDTC missing wrong shall included output data table. noFilterReportUncertain Mandatory, boolean relevant fromDTC andtoDTC empty. Indicates reason included STSTDTC confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"function return data.table columns: STUDYID       (character) Additional columns contained studyList table (input table given) STSTDTC       (character - ISO8601 format) UNCERTAIN_MSG (character) included parameter inclUncertain=TRUE. Contains indication whether STSTDTC missing wrong format. NA rows SDESIGN valid. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist optional input set studies specified studyList - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case STSTDTC confidently decided, column contains indication reason. NA rows STSTDTC can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set studies specified studyList - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"Extracts set study ids TS value TSVAL TSPARMCD 'STSTDTC' falls within specified start/end date interval IS8601 format (input parameters fromDTC/toDTC). complete incomplete input start/end dates can handled. year specified - date set first January year. year month specified - date set first day month. time part included specified input start/end date, ignored. start end input date specified - STUDYID values TS TSVAL TSPARMCD 'STSTDTC' interval specified start/end date interval extracted returned - including values equal start/end dates. included. start input date specified - STUDYID values TS TSVAL TSPARMCD 'STSTDTC' equal later input date extracted returned. end date specified - STUDYID values TS TSVAL TSPARMCD 'STSTDTC' equal earlier date extracted returned. data table list studies specified studyList, subset studies included set processed. input inclUncertain TRUE, uncertain studies included output set. uncertain situations identified reported (column UNCERTAIN_MSG): TS contains now row TSPARMCD='STSTDTC' TSVAL contains invalid ISO8601 date format TSPARMCD='STSTDTC' checks performed reported column NOT_VALID_MSG fromDTC toDTC empty noFilterReportUncertain=TRUE.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getStudiesSTSTDTC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a list of SEND studies with study start date within a specified\ninterval - or just add actual study start date for each study — getStudiesSTSTDTC","text":"","code":"if (FALSE) { GetStudyListSTSTDTC(myDbToken, allSTudies, '2018','2020') }"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjData.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from a subject level domain. — getSubjData","title":"Extract data from a subject level domain. — getSubjData","text":"Extracts returns rows specified domain set subjects included animalList.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from a subject level domain. — getSubjData","text":"","code":"getSubjData(dbToken, animalList, domain, colList = NULL)"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from a subject level domain. — getSubjData","text":"dbToken Mandatory Token open database connection (see initEnvironment). animalList Mandatory, data.table. table list animals included output data. table must include least columns named 'STUDYID' 'USUBJID'. domain Mandatory, character, case sensitive. name domain table extract data . name must subject level domain - .e. table including 'USUBJID' column. colList Optional, character, case sensitive. list columns extracted specified domain table. can single string, vector list multiple strings.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from a subject level domain. — getSubjData","text":"function returns data.table rows animals included animalList.columns specified colList, columns table colList included.list columns specified colList, included. addition, set columns always included, whether included colList : ensure row can uniquely identified: DOMAIN STUDYID USUBJID POOLID (exists) domainSEQ (exists) finding tables - support age calculation evaluation study phase: domainDTC domainDY order columns defined domain SEND IG.data table contains subject level data - .e. rows USUBJID empty applicable domain, pool level data - .e. rows POOLID empty. case, pools, includes subjects included animalList, included","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjRoute.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","title":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","text":"Returns data table set animals included animalList matching route administration specified routeFilter. routeFilter empty (null, na empty string) - rows animalList returned additional populated ROUTE column.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjRoute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","text":"","code":"getSubjRoute(   dbToken,   animalList,   routeFilter = NULL,   exclusively = FALSE,   matchAll = FALSE,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjRoute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","text":"dbToken Mandatory Token open database connection (see initEnvironment). animalList Mandatory, data.table. table list animals process. table must include least columns named 'STUDYID' 'USUBJID'. routeFilter Optional, character. route administration value(s) use criterion filtering input data table. can single string, vector list multiple strings. exclusively Mandatory routeFilter non empty, boolean. TRUE: Include animals studies routes included routeFilter. FALSE: Include animals studies route matching routeFilter. matchAll Mandatory routeFilter non empty, boolean. TRUE: Include animals studies route(s) matching values routeFilter. FALSE: Include animals studies route matching least one value routeFilter. inclUncertain Mandatory routeFilter non empty, boolean,. Indicates whether animals route confidently identified shall included output data table. noFilterReportUncertain Mandatory routeFilter empty, boolean relevant routeFilter empty. Indicates reason included route confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjRoute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","text":"function returns data.table columns: STUDYID       (character) Additional columns contained animalList table ROUTE         (character) value always returned uppercase trimmed leading/trailing blanks. UNCERTAIN_MSG (character) Included parameter inclUncertain=TRUE. case ROUTE confidently matched filtering data, column contains indication reason. NA rows ROUTE can confidently matched. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist input set animals specified animalList - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case ROUTE confidently decided, column contains indication reason. NA rows ROUTE can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set animals animalList - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjRoute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the set of animals of the specified route of administration - or just\nadd actual route of administration for each animal. — getSubjRoute","text":"route administration per animal identified hierarchical lookup domains EX - distinct empty EXROUTE value found animal, included output. TS - distinct TS parameter 'ROUTE' value exists study, included output. comparison route values done case insensitive trimmed leading/trailing blanks. input parameter inclUncertain=TRUE, uncertain animals included output set. uncertain situations identified reported (column UNCERTAIN_MSG): TS parameter ROUTE missing study EX rows contain EXROUTE value animal selected EXROUTE TS parameter ROUTE value invalid (CT value - CDISC SEND code list ROUTE) Multiple EXROUTE values found animal Multiple TS parameter ROUTE values registered study EX rows contain EXROUTE value animal found EXROUTE value animal included TS parameter ROUTE value(s) registered study checks performed reported column NOT_VALID_MSG routeFilter empty noFilterReportUncertain=TRUE.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"Returns data table set animals included animalList sex specified sexFilter. sexFilter empty (null, na empty string) - rows animalList returned additional populated SEX column.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"","code":"getSubjSex(   dbToken,   animalList,   sexFilter = NULL,   inclUncertain = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"dbToken Mandatory Token open database connection (see initEnvironment). animalList Mandatory, data.table. table list animals process. table must include least columns named 'STUDYID' 'USUBJID'. sexFilter Optional, character. sex value criterion used filtering list animals. can single string, vector list multiple strings. inclUncertain Mandatory, boolean. Indicates whether animals sex confidently identified shall included output data table. noFilterReportUncertain Mandatory, boolean. relevant sexFilter empty. Indicates reason included sex confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"function returns data.table columns: STUDYID       (character) Additional columns contained animalList table SEX          (character) UNCERTAIN_MSG (character) Included parameter inclUncertain=TRUE. case sex confidently matched filtering data, column contains indication reason. NA rows SEX can confidently matched. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist input set animals specified animalList - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case sex confidently decided, column contains indication reason. NA rows sex can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set animals animalList - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"sex value decided DM.SEX variable. comparison DM.SEX given value(s) sexFilter done case-insensitive. input parameter inclUncertain=TRUE, uncertain animals included output set. uncertain situations identified reported (column UNCERTAIN_MSG): DM.SEX value empty invalid (CT value - CDISC codelist SEX - case insensitive comparison) checks performed reported column NOT_VALID_MSG sexFilter empty noFilterReportUncertain=TRUE.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the set of animals of the specified sex - or just add the sex of each\nanimal. — getSubjSex","text":"","code":"if (FALSE) { getSubjSex(myDbToken, controlAnimals, 'M') }"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSpeciesStrain.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","title":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","text":"Returns data table set animals included animalList matching species strain specified speciesFilter strainFilter. speciesFilter strainFilter empty (null, na empty string) - rows animalList returned additional populated SPECIES STRAIN columns.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSpeciesStrain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","text":"","code":"getSubjSpeciesStrain(   dbToken,   animalList,   speciesFilter = NULL,   strainFilter = NULL,   inclUncertain = FALSE,   exclusively = FALSE,   noFilterReportUncertain = TRUE )"},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSpeciesStrain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","text":"dbToken Mandatory Token open database connection (see initEnvironment). animalList Mandatory, data.table. table list animals process. table must include least columns named 'STUDYID' 'USUBJID'. speciesFilter Optional, character. species value(s) use criterion filtering input data table. can single string, vector list multiple strings. strainFilter Optional, character. strain value(s) use criterion filtering input data table. valid specify value(s) one values specified parameter speciesFilter can single string, vector list multiple strings. multiple values specified speciesFilter, strain value must prefixed species ':' , e.g. c('RAT:WISTAR','DOG: BEAGLE'). may included number blanks ':' inclUncertain Mandatory, boolean. Indicates whether animals species strain confidently identified shall included output data table. exclusively Mandatory, boolean. TRUE: Include animals studies species optional strains included speciesFilter strainFilter FALSE: Include animals studies species strain matching speciesFilter strainFilter respectively. noFilterReportUncertain Optional, boolean. relevant speciesFilter  strainFilter empty. Indicates reason included species strain confidently decided animal.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSpeciesStrain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","text":"function returns data.table columns: STUDYID       (character) Additional columns contained animalList table SPECIES       (character) value always returned uppercase trimmed leading/trailing blanks. STRAIN        (character) value always returned uppercase trimmed leading/trailing blanks. UNCERTAIN_MSG (character) Included parameter inclUncertain=TRUE. case species strain confidently matched filtering data, column contains indication reason. NA rows species strain can confidently matched. non-empty UNCERTAIN_MSG value generated function merged non-empty UNCERTAIN_MSG values may exist input set animals specified animalList - separated '|'. NOT_VALID_MSG (character) Included parameter noFilterReportUncertain=TRUE. case species strain confidently decided, column contains indication reason. NA rows species strain can confidently decided. non-empty NOT_VALID_MSG value generated function merged non-empty NOT_VALID_MSG values may exist input set animals animalList - separated '|'.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getSubjSpeciesStrain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the set of animals of the specified species and strain - or just add\nthe species and strain for each animal. — getSubjSpeciesStrain","text":"species strain per animal respectively identified hierarchical lookup domains DM - DM.SPECIES (DM.STRAIN) empty, value included output. TX - TX parameter 'SPECIES' ('STRAIN') exists group related animal, TXVAL value included output. TS - TS parameter 'SPECIES' ('STRAIN') exists, included output. comparisons species/strain values done case insensitive trimmed leading/trailing blanks. input parameter inclUncertain=TRUE, uncertain animals included output set. uncertain situations identified reported SPECIES STRAIN respectively (column UNCERTAIN_MSG): TS parameter SPECIES/STRAIN missing invalid (CT value - CDISC SEND code list SPECIES/STRAIN) TX parameter SPECIES/STRAIN missing invalid (CT value) DM.SPECIES/STRAIN missing invalid (CT value) Different values SPECIES/STRAIN across TS, TX DM studies one TS parameter SPECIES/STRAIN registered Multiple TS parameter SPECIES/STRAIN values registered study TX parameter SPECIES/STRAIN /DM.SPECIES/STRAIN match TS values. Multiple TS parameter SPECIES/STRAIN values registered study TX parameter SPECIES/STRAIN DM.SPECIES/STRAIN unequal. checks performed reported column NOT_VALID_MSG speciesFilter strainFilter empty noFilterReportUncertain=TRUE.","code":""},{"path":[]},{"path":"https://phuse-org.github.io/sendigR/reference/getTabColLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels for columns in a data.table — getTabColLabels","title":"Get labels for columns in a data.table — getTabColLabels","text":"Get labels columns data.table","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getTabColLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels for columns in a data.table — getTabColLabels","text":"","code":"getTabColLabels(table)"},{"path":"https://phuse-org.github.io/sendigR/reference/getTabColLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels for columns in a data.table — getTabColLabels","text":"table Mandatory data.table get column labels ","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getTabColLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels for columns in a data.table — getTabColLabels","text":"named vector column/label pair. column defined label, label 'na'","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/getTabColLabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels for columns in a data.table — getTabColLabels","text":"","code":"if (FALSE) { colLabels = getTabColLabels(controlAnimalsAll) }"},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the environment. — initEnvironment","title":"Initialize the environment. — initEnvironment","text":"Open create SEND database return token open database connection.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the environment. — initEnvironment","text":"","code":"initEnvironment(   dbType = NULL,   dbPath = NULL,   dbCreate = FALSE,   dbUser = NULL,   dbPwd = NULL,   dbSchema = NULL,   ctFile = NULL )"},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the environment. — initEnvironment","text":"dbType Mandatory, character type database, valid values (case insensitive): 'sqlite' 'oracle' dbPath Mandatory, character path database (path file another kind db reference) dbCreate Mandatory, boolean TRUE, new database created - valid dbType 'sqlite' dbUser Mandatory, character - login credentials required specific db type user name used login database. dbPwd Mandatory, character - login credentials required specific db type password used login database. dbSchema Optional, character table owner SEND table specific database. parameter relevant specify necessary prefix table names schema SQL statements database. ctFile Optional, character. Name (full path) CDISC CT file Excel xls format imported. relevant use another CDISC CT version version included packages wanted.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the environment. — initEnvironment","text":"function returns token data structure describing open database connection. token must given input parameter functions accessing actual database.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize the environment. — initEnvironment","text":"function executed parameter dbCreate=FALSE (default), connection specified database opened. Dependent type database (parameter dbType), login using specified user credentials (parameters dbUser dbPwd) may done. database must contain set tables representing SEND domains compliant SEND IG version 3.0 /3.1. function executed parameter dbCreate=TRUE, empty database created opened. supported SQLite database, .e. parameter dbType='sqlite'. SEND domain tables may created execution function dbCreateSchema. Besides open database connection, set CDISC SEND controlled terminology values imported. parameter ctFile specified path Excel file containing CDISC SEND ct version downloaded https://evs.nci.nih.gov/ftp1/CDISC/SEND/, content file imported used package's functions. Else set CDISC SEND CT values included  packages used package's functions. newest CDISC SEND CT version time build current version package included.","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/initEnvironment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize the environment. — initEnvironment","text":"","code":"if (FALSE) { db <- initEnvironment(dbType='sqlite',                       dbPath='//servername/SendData/db/send.db',                       ctFile='//servername/SendData/metadata/SEND_Terminology_2019-12-27.xls') db <- initEnvironment(dbType='oracle',                       dbPath='dbserver:1521/send_db',                       dbUser='ME',                       dbPwd='mypassword',                       dbSchema = 'send',                       ctFile='//servername/SendData/metadata/SEND_Terminology_2019-12-27.xls') }"},{"path":"https://phuse-org.github.io/sendigR/reference/standardize_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardizes SEND xpt files using CDISC controlled terminologies — standardize_file","title":"Standardizes SEND xpt files using CDISC controlled terminologies — standardize_file","text":"Standardizes SEND xpt files using CDISC controlled terminologies","code":""},{"path":"https://phuse-org.github.io/sendigR/reference/standardize_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardizes SEND xpt files using CDISC controlled terminologies — standardize_file","text":"","code":"standardize_file(input_xpt_dir, output_xpt_dir, json_file)"},{"path":"https://phuse-org.github.io/sendigR/reference/standardize_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardizes SEND xpt files using CDISC controlled terminologies — standardize_file","text":"input_xpt_dir Mandatory. input folder name xpt files folder. output_xpt_dir Mandatory. output folder name writing cleaned xpt files. json_file Mandatory. json filename used mapping.","code":""}]
